---
title: "Neverbální paměť"
author: "Josef Mana"
date: "`r Sys.Date()`"
number-sections: true
format:
  docx:
    echo: false
    df-print: kable
bibliography: references.bib
---

```{r}
#| label: envir
#| warning: false

# set-up libraries
library(here)
library(psych)
library(gt)
library(corrplot)
#library(purrr) # not needed but will be called by pre-processing if needed (luckily it has no conflicts)

# list data sets paths
paths <-

  list(
    d = here("_data","nonverbal_mem","main_df.csv"),
    v = here("_data","nonverbal_mem","vars.csv")
  )

# read the data
with(
  
  paths,
  {
    # if the data were not pre-processed yet, run pre-processing script
    if( !(file.exists(d) & file.exists(v) ) ) source( here("scripts","nonverbmem_prep.R") )
    
    # next lines will be import data from .csv and clean the environment
    for( i in names(paths) ) assign( i, read.csv( paths[[i]], sep = "," ), pos = 1 ) # import the data from csv
    rm( list = ls(.GlobalEnv)[ !ls(.GlobalEnv) %in% names(paths) ], pos = 1 ) # keep only the data sets in the environment

  }

)

# import in-house functions
source( here("funs","general.R") )

```

## Statistická analýza

Neuropsychologické proměnné byly popsány průměrem a směrodatnou odchylkou pro každý data set. Kriteriální validita byla hodnocena Pearsonovým korelačním koeficientem mezi vyjadřujícím sílu lineární asociace mezi skóry v testu neverbální paměti a výše popsaných neuropsychologických testů k hodnocení konvergentní a divergenetní validity. Výsledky jsou uvedeny v podobě Pearsonova korelačního koeficientu a p-hodnoty spočtené t-testem na základě testové statistiky:

$t = \frac{r \sqrt(n-2)}{\sqrt(1-r^2)}$

se standardní chybou:

$se = \sqrt(\frac{1-r^2}{n-2})$,

kde r = Pearsonův korelační koeficient, n = počet pozorování. Analýzy byly provedeny v statistickém programovacím jazyku R (verze `r with( version, paste(major,minor,sep=".") )`) za použití balíčku "psych" [@psych].

## Výsledky

Soubory jsou popsány v @tbl-desc. Výsledky korelační analýzy jsou uvedeny v @tbl-corr ve formátu Pearsonův korelační koeficient (p-hodnota). Zatímco Kritérium 3 vykazovalo zřetelně nižší korelace s konvergentními měřítky, ostatní kritéria vykazovala nízkou až střední korelaci *...(tohle by bylo dobré interpretovat na základě nějakých předem zvolených intervalů korelace, které považujeme za "slabé", "střední" a "silné")...*

{{< pagebreak >}}

```{r}
#| label: tbl-desc
#| tbl-cap: Popis výzkumného vzorku
#| warning: false

# re-format source variable which we will be conditioning on
d$source <- factor( d$source, levels = c("Sadecka","Validacni_studie"), labels = paste0("Data set #",1:2), ordered = T )
d$sex <- factor( d$sex, levels = c("f","m"), ordered = T )

# extract number of subjects
n <- sapply( levels(d$source), function(i) as.character( nrow( d[ d$source == i, ] ) ) )

# print it
printab( v, d, "source", 2 ) %>%
  
  # ToM shinaningans (because it is in both data sets)
  bind_rows(
    . ,
    data.frame( .[ "ToM1", "Data set #1" ], .[ "ToM", "Data set #2" ] ) %>% `colnames<-`( paste0("Data set #",1:2) )
  ) %>%
  filter( ! (rownames(.) %in% c("ToM","ToM1") ) ) %>%
  `rownames<-`( c( rownames(.)[1:(nrow(.)-1)], "ToM" ) ) %>%
  slice( 1:17, n(), 18:(n()-1) ) %>%
  
  # finishing touches
  mutate( across( where(is.character), ~ ifelse( grepl("NA",.x), "-", .x ) ) ) %>%
  rbind( N = n, . )  %>%
  gt( rownames_to_stub = T ) %>%
  cols_align(align = "center", columns = unique(d$source) )
```

{{< pagebreak >}}

```{r}
#| label: tbl-corr
#| tbl-cap: Korelační analýza testu neverbální paměti
#| warning: false

# extract correlation matrices
corr <-
  
  lapply(
    
    1:2,
    function(i)
    corr.test(
      d[ , with( v , variable[ data_set %in% c( "both", paste0("Data set #",i) ) ] ) ],
      method = "pearson",
      use = "pairwise.complete.obs",
      adjust = "none"
    )
    
  )

# prepare a table with all the variables
lapply(
    
    1:2,
    function(i) {
      
      r <- na.omit( v[ v$data_set == paste0("Data set #",i), "variable" ] ) # extract row
      c <- na.omit( v[ v$data_set == "both", "variable" ] ) # extract columns
      
      # extract correlations and SEs
      cor <- corr[[i]]$r[r,c] %>% as.data.frame() %>% mutate( across( everything(), ~ rprint(.x,3) ) )
      p <- corr[[i]]$p[r,c] %>% as.data.frame() %>% mutate( across( everything(), ~ ifelse( .x < .001, "<.001", rprint(.x,3) ) ) )
      #se <- corr[[i]]$se[r,c] %>% as.data.frame() %>% mutate( across( everything(), ~ rprint(.x,3) ) )
      
      # extract the table
      sapply( colnames(cor), function(j) paste0( cor[[j]], " (", p[[j]], ")") ) %>%
        as.data.frame() %>%
        `rownames<-`( rownames(cor) ) %>%
        `rownames<-`( v[ v$variable %in% rownames(.), "label" ] ) %>%
        `colnames<-`( v[ v$variable %in% colnames(.), "label" ] ) %>%
        rownames_to_column("test") %>%
        mutate( data_set = paste0("Data set #",i) )

    }
      
  ) %>%
  
  # glue the table
  do.call( rbind.data.frame, . ) %>%
  gt( rowname_col = "test", groupname_col = "data_set" ) %>%
  
  # add column spanners
  tab_spanner( label = "NP kritérium 1", columns = starts_with("NP1"), gather = F ) %>%
  tab_spanner( label = "NP kritérium 2", columns = starts_with("NP2"), gather = F ) %>%
  tab_spanner( label = "NP kritérium 3", columns = starts_with("NP3"), gather = F ) %>%
  tab_spanner( label = "NP kritérium 4", columns = starts_with("NP4"), gather = F ) %>%
  
  # label the columns
  cols_label(
    ends_with("1-4") ~ "Pokus 1-4",
    ends_with("vybavení") ~ "Oddálené vybavení"
  ) %>%
  
  # tidy it up
  cols_align( align = "center", columns = -1 ) %>%
  cols_width( test ~ px(150), everything() ~ px(100) )

```

{{< pagebreak >}}

## Reference
